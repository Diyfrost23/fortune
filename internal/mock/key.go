// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	key "github.com/shlima/fortune/internal/pkg/key"
)

// MockKeygen is a mock of IGen interface.
type MockKeygen struct {
	ctrl     *gomock.Controller
	recorder *MockKeygenMockRecorder
}

// MockKeygenMockRecorder is the mock recorder for MockKeygen.
type MockKeygenMockRecorder struct {
	mock *MockKeygen
}

// NewMockKeygen creates a new mock instance.
func NewMockKeygen(ctrl *gomock.Controller) *MockKeygen {
	mock := &MockKeygen{ctrl: ctrl}
	mock.recorder = &MockKeygenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeygen) EXPECT() *MockKeygenMockRecorder {
	return m.recorder
}

// BrainSHA256 mocks base method.
func (m *MockKeygen) BrainSHA256(password []byte) (key.KeyChain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BrainSHA256", password)
	ret0, _ := ret[0].(key.KeyChain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BrainSHA256 indicates an expected call of BrainSHA256.
func (mr *MockKeygenMockRecorder) BrainSHA256(password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BrainSHA256", reflect.TypeOf((*MockKeygen)(nil).BrainSHA256), password)
}

// Generate mocks base method.
func (m *MockKeygen) Generate() (key.KeyChain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(key.KeyChain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockKeygenMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockKeygen)(nil).Generate))
}

// SetTesting mocks base method.
func (m *MockKeygen) SetTesting(address string) key.IGen {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTesting", address)
	ret0, _ := ret[0].(key.IGen)
	return ret0
}

// SetTesting indicates an expected call of SetTesting.
func (mr *MockKeygenMockRecorder) SetTesting(address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTesting", reflect.TypeOf((*MockKeygen)(nil).SetTesting), address)
}
